{"ast":null,"code":"var _jsxFileName = \"/Users/mr.vikas/Desktop/Projects/movies_filter/src/components/MovieItem.js\";\nimport React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./MovieItem.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction MovieItem({\n  movie,\n  index\n}) {\n  const genres = movie.moviegenres.join(\", \");\n  const languages = movie.movielanguages.join(\", \");\n  const countries = movie.moviecountries.join(\", \");\n\n  // Determine if this card should be shown based on the index\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Card, {\n      style: {\n        width: \"18rem\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n        variant: \"top\",\n        src: movie.moviemainphotos\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Card.Body, {\n        children: /*#__PURE__*/_jsxDEV(Card.Title, {\n          children: movie.movietitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ListGroup, {\n        className: \"list-group-flush\",\n        children: [/*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"Language: \", languages]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"Country: \", countries]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"Genre: \", genres]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(ListGroup.Item, {\n          children: [\"IMDB ID: \", movie.imdbmovieid]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n}\n_c = MovieItem;\nexport default MovieItem;\nvar _c;\n$RefreshReg$(_c, \"MovieItem\");","map":{"version":3,"names":["React","Card","ListGroup","jsxDEV","_jsxDEV","MovieItem","movie","index","genres","moviegenres","join","languages","movielanguages","countries","moviecountries","children","style","width","Img","variant","src","moviemainphotos","fileName","_jsxFileName","lineNumber","columnNumber","Body","Title","movietitle","className","Item","imdbmovieid","_c","$RefreshReg$"],"sources":["/Users/mr.vikas/Desktop/Projects/movies_filter/src/components/MovieItem.js"],"sourcesContent":["import React from \"react\";\nimport Card from \"react-bootstrap/Card\";\nimport ListGroup from \"react-bootstrap/ListGroup\";\nimport \"./MovieItem.css\";\n\nfunction MovieItem({ movie, index }) {\n  const genres = movie.moviegenres.join(\", \");\n  const languages = movie.movielanguages.join(\", \");\n  const countries = movie.moviecountries.join(\", \");\n\n  // Determine if this card should be shown based on the index\n\n\n  return (\n    <div >\n      <Card style={{ width: \"18rem\" }}>\n        <Card.Img variant=\"top\" src={movie.moviemainphotos} />\n        <Card.Body>\n          <Card.Title>{movie.movietitle}</Card.Title>\n        </Card.Body>\n        <ListGroup className=\"list-group-flush\">\n          <ListGroup.Item>Language: {languages}</ListGroup.Item>\n          <ListGroup.Item>Country: {countries}</ListGroup.Item>\n          <ListGroup.Item>Genre: {genres}</ListGroup.Item>\n          <ListGroup.Item>IMDB ID: {movie.imdbmovieid}</ListGroup.Item>\n        </ListGroup>\n      </Card>\n    </div>\n  );\n}\n\nexport default MovieItem;\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,IAAI,MAAM,sBAAsB;AACvC,OAAOC,SAAS,MAAM,2BAA2B;AACjD,OAAO,iBAAiB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEzB,SAASC,SAASA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EACnC,MAAMC,MAAM,GAAGF,KAAK,CAACG,WAAW,CAACC,IAAI,CAAC,IAAI,CAAC;EAC3C,MAAMC,SAAS,GAAGL,KAAK,CAACM,cAAc,CAACF,IAAI,CAAC,IAAI,CAAC;EACjD,MAAMG,SAAS,GAAGP,KAAK,CAACQ,cAAc,CAACJ,IAAI,CAAC,IAAI,CAAC;;EAEjD;;EAGA,oBACEN,OAAA;IAAAW,QAAA,eACEX,OAAA,CAACH,IAAI;MAACe,KAAK,EAAE;QAAEC,KAAK,EAAE;MAAQ,CAAE;MAAAF,QAAA,gBAC9BX,OAAA,CAACH,IAAI,CAACiB,GAAG;QAACC,OAAO,EAAC,KAAK;QAACC,GAAG,EAAEd,KAAK,CAACe;MAAgB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACtDrB,OAAA,CAACH,IAAI,CAACyB,IAAI;QAAAX,QAAA,eACRX,OAAA,CAACH,IAAI,CAAC0B,KAAK;UAAAZ,QAAA,EAAET,KAAK,CAACsB;QAAU;UAAAN,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAa;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAClC,CAAC,eACZrB,OAAA,CAACF,SAAS;QAAC2B,SAAS,EAAC,kBAAkB;QAAAd,QAAA,gBACrCX,OAAA,CAACF,SAAS,CAAC4B,IAAI;UAAAf,QAAA,GAAC,YAAU,EAACJ,SAAS;QAAA;UAAAW,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,eACtDrB,OAAA,CAACF,SAAS,CAAC4B,IAAI;UAAAf,QAAA,GAAC,WAAS,EAACF,SAAS;QAAA;UAAAS,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,eACrDrB,OAAA,CAACF,SAAS,CAAC4B,IAAI;UAAAf,QAAA,GAAC,SAAO,EAACP,MAAM;QAAA;UAAAc,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC,eAChDrB,OAAA,CAACF,SAAS,CAAC4B,IAAI;UAAAf,QAAA,GAAC,WAAS,EAACT,KAAK,CAACyB,WAAW;QAAA;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAiB,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACpD,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACJ,CAAC;AAEV;AAACO,EAAA,GAxBQ3B,SAAS;AA0BlB,eAAeA,SAAS;AAAC,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}